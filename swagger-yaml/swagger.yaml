---
swagger: "2.0"
info:
  description: "This is a simple API used to save game events data to a kypo backend\
    \ server and send them to a visualization client application."
  version: "1.0.0"
  title: "Kypo visualization API"
  contact:
    email: "422160@mail.muni.cz"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/JuroUhlar/kypo-backend/1.0.0"
tags:
- name: "viz client"
  description: "Calls from JS client to get data"
- name: "kypolab backend"
  description: "Operations sending data to server"
schemes:
- "https"
paths:
  /games:
    get:
      tags:
      - "viz client"
      summary: "Retrieves all game instance IDs currently in the database"
      description: "Get a list of all games/datasets currently in the database. Retrieves\
        \ a list of unique game instance IDs.  \n"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Array of strings representing game_instance_ID (s)"
          examples:
            application/json: "[\n  \"all-events\",\n  \"test-data\",\n  \"undefined\"\
              ,\n  \"bulk\",\n  \"add-id-test\",\n  \"st-polten\"\n]"
  /events:
    get:
      tags:
      - "viz client"
      summary: "retrieves events"
      description: "You can get a specific filtered dataset by setting query parameters\
        \ equivalent to SQL conditions in the database. You can combine different\
        \ conditions.\n"
      operationId: "getEvents"
      produces:
      - "application/json"
      parameters:
      - name: "game_instance_ID"
        in: "query"
        description: "pass an optional search string to get events from a specific\
          \ game (dataset), for example, 'st-polten'"
        required: false
        type: "string"
      - name: "event"
        in: "query"
        description: "pass an optional search string to get only events of a specific\
          \ type, for example, 'Game started', 'Game finished', 'Correct flag submited',\
          \ ..."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Limit results to events during a specific level 1 through 6"
        required: false
        type: "integer"
        minimum: 1
        format: "int32"
      - name: "player_ID"
        in: "query"
        description: "Limit results to events of specific player by passing in his/her\
          \ ID, for example, '17158'"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "events results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
  /event:
    post:
      tags:
      - "kypolab backend"
      summary: "adds a new event to database"
      description: "Adds a new event tot the system"
      operationId: "addEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "event"
        description: "Event to add"
        required: false
        schema:
          $ref: "#/definitions/Event"
      responses:
        200:
          description: "Response body contains info whether the operation was successul\
            \ or not. TODO meaningful response codes"
  /events-bulk/{gameID}:
    post:
      tags:
      - "kypolab backend"
      summary: "adds a new batch of events to the database"
      description: "Adds a new array of events to the system"
      operationId: "addEventsBulk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "events"
        description: "Events to add"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Event"
      - name: "gameID"
        in: "path"
        description: "If your events to not contain the game_instance_ID property,\
          \ you can send them anyway, just specify their game_instance_id as a URL\
          \ parameter. It will be automatically added to all events that don't have\
          \ a defined game_instance_id. If your data already is in the correct format,\
          \ the parameter is not necessary."
        required: true
        type: "string"
      responses:
        200:
          description: "Response body contains info whether the operation was successul\
            \ or not. TODO meaningful response codes"
definitions:
  Event:
    type: "object"
    required:
    - "ID"
    - "event"
    - "level"
    - "logical_time"
    - "timestamp"
    properties:
      ID:
        type: "integer"
        example: 57287
      timestamp:
        type: "string"
        example: "2016-04-07 06:52:43"
      logical_time:
        type: "string"
        example: "00:08:46"
      level:
        type: "string"
        example: "2"
      event:
        type: "string"
        example: "Correct flag submited"
      game_instance_id:
        type: "string"
        example: "st-polten"
